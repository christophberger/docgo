// Code generated by go-bindata.
// sources:
// resources/.goweave.css.swp
// resources/.goweave.css.un~
// resources/goweave.css
// resources/goweave.css.bak
// resources/goweave.templ
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesGoweaveCssSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x4f\x8c\x14\xc5\x17\xc7\x0b\x02\xfb\x63\xf8\xf7\x33\xfe\x89\x78\xb2\xd8\x95\xc0\x92\xed\x9e\x99\xdd\x61\x5d\x67\x2f\x10\x4c\x60\x65\x40\x23\x11\x0c\x27\xab\xbb\x6b\x66\x4a\xba\xbb\x26\xd5\x3d\x3b\x3b\x20\xa0\x17\x6f\x2a\x4a\x62\x4c\x8c\x27\x83\x10\x4e\x5e\x34\xc6\x90\x18\x8d\x48\x62\x44\xc3\x45\x4f\x26\x1a\x12\x4c\x24\xa0\x89\x26\x1a\x4e\x7e\x7b\xa6\x7b\xa6\xa7\x87\x5d\xe4\xa0\xc6\x58\xdf\xe1\x33\xdd\x5d\xbc\x7a\xf5\xea\xd5\xab\xea\x10\xc6\x2a\x1c\x98\xdb\x4b\x1f\x36\x4b\x04\xba\x8b\x90\xf5\xab\x47\x0e\xaa\x3d\x97\x97\x7b\x6b\x09\xb1\xeb\x4a\x04\xa1\x6c\xd4\xc9\xd2\xaa\xc8\xb0\xee\x4a\x25\xb8\x6f\x54\x76\xec\x33\xab\x4a\x84\x47\x4c\x4b\x2e\x64\xed\x8e\xf7\x1c\xe6\x1f\xe5\xf3\xdc\x95\x0d\x8f\xfb\x61\x7e\x97\xcc\xef\x94\x0e\xcf\x07\xca\xce\xd7\x44\x58\x6f\x5a\xa6\x2d\xbd\x7c\xcf\xd8\xe2\xaa\xc6\x55\xbe\x26\x5b\x9c\xcd\xf3\xbc\xe2\x81\x6c\x2a\x9b\x07\x49\x8b\x69\x07\xc1\x6d\x22\xd4\xd2\xfa\x8f\xab\x19\x56\x8d\x99\x75\x64\x6a\xb2\x58\x88\x1e\xc7\x46\x37\xd2\x7b\xee\x7e\xea\x9f\x8e\x4a\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\xeb\x6f\x54\xd8\x58\x46\x4e\xe0\xba\x3c\x7e\x7e\x2b\xbe\x2e\xcb\x5c\xb5\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xfe\xbd\x62\x0e\x21\x87\x56\x10\xf2\xe3\x08\xe9\xfc\xff\x7f\xf2\xef\xff\x1b\xff\x27\xe4\x3a\xb8\x0a\x2e\x81\xf3\xe0\x1c\x58\x00\x35\xf0\x24\x78\x02\x3c\x0e\xca\x60\x1c\xac\x03\x6b\xc0\x6a\xf0\xfb\x7a\x42\xae\x80\xef\xc1\x77\xe0\x4b\xf0\x01\x78\x1f\xbc\x07\xce\x82\x53\xe0\x39\x60\x81\x0a\x78\x0c\xcc\x81\x32\xd8\x04\xc6\xc0\x28\x58\x0f\x6e\xae\x83\x4f\xf0\x1b\xb8\x02\xbe\x02\x97\xc0\x17\xe0\x43\x70\x16\xbc\x03\x4e\x83\x93\xe0\x05\x70\x02\x1c\x07\xcf\x82\x43\xe0\x69\x70\x10\x3c\x02\x6e\xae\x25\xe4\x07\x70\x19\x9c\x07\xa7\xc1\x4b\xa0\x05\x9a\x20\x04\x26\xb8\x1f\xdc\x07\xee\x05\x2b\xc0\xb5\x35\x84\x7c\x03\x2e\x80\x77\xc1\x9b\xe0\x65\xb0\x00\x9e\x01\x73\xa0\x08\xf2\xc0\x04\x0f\x80\x55\x60\x04\xac\x04\xbf\xae\x46\xfc\xe0\x6b\xf0\x11\x38\x03\x4e\x81\xe7\x41\x0d\xec\x01\x73\x60\x37\x30\xc0\xd5\x1c\x21\x17\xc1\x05\xf0\x29\x78\x1b\xbc\x06\x4e\x82\x57\x80\x02\x0c\x54\xc0\x0c\x98\x06\x1b\xc0\x2a\x30\x02\x56\x82\x1b\xab\xe0\x07\x7c\x02\x3e\x06\xe7\xc0\x1b\xe0\x45\xd0\x06\x02\x54\x01\x07\xdb\x81\x01\xb6\x82\x71\xb0\x01\x8c\x80\x5f\xfe\x47\xc8\xcf\xe0\x27\xf0\x2d\xf8\x1c\x5c\x04\x9f\x81\x33\xe0\x75\x70\x0a\xbc\x0a\x4e\x82\x10\xb8\x60\x37\xd8\x05\x4a\xe0\x21\xb0\x11\x3c\x08\xd6\x46\xfe\x50\x73\xd7\xc1\xb5\x91\xb8\xfe\xb4\xb4\xb4\xb4\xfe\x1a\x1d\x23\x39\xfc\xc9\x35\x98\xe3\x08\xbf\x56\xa6\x05\x73\x1b\xf7\x68\xef\x6b\x96\xe4\xc6\xe2\x5f\x94\x51\x47\xcc\x9b\xa1\x43\x8f\x12\x9a\xed\x73\x0b\x3b\x05\x3b\x22\x7d\xb7\x4d\x03\x5b\x71\xee\x53\xe6\x3b\x74\x8b\xc7\x16\x8c\x96\x70\xc2\x7a\x99\x96\xe0\x7d\x1c\x46\xdb\x3d\xee\x08\x46\x49\x7e\x2b\x3d\xc0\x55\x9b\xfa\x4c\x29\xd9\xa2\xf3\x82\xb7\x1a\x52\x85\x01\xdd\x9a\xef\x45\xe9\x88\xa0\xe1\xb2\x76\x99\xfa\xd2\xe7\xc3\xa1\x99\xb6\x74\xb8\xc9\xbd\x46\xd8\xa6\x47\x29\x19\x88\xd2\x08\x65\xa3\x4c\x8b\xdc\x4b\xf5\xea\xd8\x47\x71\x2e\x62\x98\xf3\x84\x9f\x84\x9b\x99\xa3\xe9\x48\xbb\xd7\xb3\x17\x96\xe5\x4a\xfb\xf0\x2c\x1d\xca\xc5\x04\x1d\x4a\x62\x12\x9e\x25\x95\xc3\x55\x6f\x46\x39\x8f\xa9\x9a\xf0\x31\x1e\x1e\x28\xcd\xc5\xa3\x17\x0b\x85\x4d\x91\xdf\xec\x50\xd9\x91\x98\xe5\xf2\x8e\xef\xa5\x32\x3f\x5d\x18\xca\xfc\xbe\x45\x92\x9e\x49\xf8\xd2\xf9\x86\x7d\x37\x7a\xc3\xe5\xd5\xb0\x4c\x59\x33\x94\xb3\xbd\x36\x25\x6a\xf5\x7e\x63\x76\x1e\x59\xcf\x48\xaf\xe9\xcb\x64\x7d\x8e\xdd\xae\x83\x32\x03\x6e\x87\x42\xfa\x03\x9d\x28\x64\x4b\x57\x22\xbd\xaa\x66\x6d\x29\x4e\x16\x26\x68\xf2\x35\x3e\xdb\xf9\xeb\xaa\xf4\x43\xa3\xca\x3c\xe1\xc2\xf5\x5e\xee\xbb\x72\x82\xee\x95\x3e\xb3\x71\xdd\x29\xfd\x40\xba\x2c\x98\xa0\xa3\x95\xa6\x2d\x1c\x16\xb7\xf0\xd1\x09\xea\x49\x5f\x06\x0d\x66\xa7\x93\xd2\x2d\xa7\x86\xe2\xb4\x73\x13\x07\x6e\x31\xfb\x70\x4d\xc9\xa6\xef\x18\x71\x2c\x63\x53\x85\xe8\xd3\x0d\x60\x9e\xab\x50\xd8\xcc\x35\x98\x2b\x6a\x58\x77\x54\x1f\xd2\x23\xd1\x5c\x75\x65\xcb\x58\x58\x24\x8d\x9d\x72\x8c\xfa\x27\x55\x1b\xb7\x17\xb3\xed\xdd\xa5\x98\xec\x54\x6f\x77\xfd\x63\x7f\x9d\x99\x07\xe2\x08\x2f\xd3\x19\x14\x57\x76\x1a\xdd\xe0\xe3\x41\x3b\x5b\x02\x43\xde\x6a\xae\xbd\x4c\xa7\x63\xae\x0b\xc7\xe1\xfe\xa2\x91\xfc\x99\xc0\x93\x31\x33\x71\x47\x26\xa9\x5a\x9e\xea\x25\x22\xb5\x57\x27\xbb\xdd\x52\x33\xec\xec\x9f\x74\x3d\x8c\x95\x0a\xd1\x67\x89\x35\x18\xda\xea\xc7\xe2\xb1\xfb\x19\x29\x9a\xd3\xd1\x40\x7d\xcb\xb8\xf8\xea\xc5\x89\xfe\xfd\x64\xea\x7e\x2a\x75\x5f\x4a\xdd\x6f\x1b\xf2\xdf\x4d\x56\x7f\x72\xdd\x56\x4b\x86\xa1\xf4\x52\xc9\x5a\xa4\x28\x32\xcb\xd6\x6d\x0c\xf9\x42\x98\xcc\x30\x72\x8f\x0c\xb9\xc2\xe7\x46\x9d\xa7\x56\x20\x37\xb0\x21\x36\xef\x40\x6a\x70\x44\x54\x84\xa5\xf8\xe6\x09\xba\xb9\xc2\x42\x19\x5d\x77\x73\x77\x9e\x47\x39\xc3\x43\xc0\xfc\xc0\x08\x60\x57\x4d\xa5\x22\x4a\x41\x34\xf5\x68\xca\xd1\x54\xd3\x53\x4c\x96\x80\x31\x36\x50\x50\x5e\xf4\xc3\xe7\xb8\xf0\x62\x9b\x56\x5d\x84\x03\x5b\x4c\x36\xb8\x42\x0c\x6a\xc8\xdb\x90\xa5\x70\x7a\xde\xd2\x83\xce\xd8\x16\x9f\x2e\xa5\x0d\x5d\x74\x54\xcc\x1d\x36\xad\x4e\xb2\x62\xc9\x4a\x9b\x1e\xe6\xed\x16\xce\xeb\xbe\x69\xef\x54\x12\x7e\x94\xcb\xc1\x63\xe9\x0e\x17\xb5\x60\xce\xdc\xe9\xb2\xf6\x46\x6b\x64\x4f\xc9\xce\x9b\xc0\xb0\xb9\xeb\x0e\x9d\xad\xb7\x36\xc5\xf1\x3f\x74\xa8\x26\x27\x58\xe7\x15\x15\x9d\x5e\x2e\x6b\x04\xd8\x4d\xc9\xdd\x6c\xd6\x4b\xd6\x43\xf7\x75\xd4\x71\x32\x58\x6a\xe6\xd4\xd0\x0e\x4d\x26\x39\x58\x80\xb7\x2b\xb8\xd4\x89\x31\x94\xa8\x54\x43\xff\x10\x8e\xd6\xb5\x10\x7d\x66\x89\x25\x9d\x76\x14\x1d\xde\x7f\x49\xd4\x3b\xf7\xef\x8f\x5e\x7d\x7f\x04\x00\x00\xff\xff\x9c\x31\x69\xd3\x00\x30\x00\x00")

func resourcesGoweaveCssSwpBytes() ([]byte, error) {
	return bindataRead(
		_resourcesGoweaveCssSwp,
		"resources/.goweave.css.swp",
	)
}

func resourcesGoweaveCssSwp() (*asset, error) {
	bytes, err := resourcesGoweaveCssSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/.goweave.css.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1460013604, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesGoweaveCssUn = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xd9\xbf\x4f\x14\x41\x14\x07\xf0\x39\x3c\x2f\x01\x31\x22\xdc\x21\xc2\x1d\x59\xe3\x8f\xc2\x78\x78\xa8\x67\x82\x4a\x82\x70\xf0\x1f\x08\xa5\x21\xba\x01\x8a\xbb\x55\x63\xb4\xb0\xf2\xcf\x40\x34\x5a\x59\x58\x5a\x1a\x0a\x7f\x45\x13\x2b\x13\x1b\xed\x24\x86\x58\x19\x2d\x30\x34\x26\xfa\xbe\xbb\x33\xbb\xef\x96\xcd\xde\xc8\x6c\x39\xdf\xe4\x91\x99\xc7\xdc\x4c\xc2\x27\xb7\x61\x77\xe7\x57\x9a\x8f\xaf\xb4\x1a\xde\xa6\xe8\x7a\xfb\xe5\xb9\xfb\xe4\xc5\x87\xf5\x8d\xf2\xf6\xc9\x13\x9f\x26\x6a\xaf\xdf\x9d\xde\xba\xf9\xf9\x5b\xd7\xab\xa7\x9b\xef\x7f\xac\xbf\x79\x29\x84\x78\x44\x55\x74\x28\xcd\xc5\x5b\x4b\x2b\xad\xea\x6d\xef\xc6\x05\xa7\xe6\x36\x2f\x52\x7f\x86\xaa\x8f\xea\x00\xd5\xa8\x08\xd2\x27\xc7\xfe\x7c\xa1\xd0\x53\xce\xe7\x68\x50\x10\x57\x3f\xb2\x05\x2a\xf8\xe0\x25\xd5\xfb\x4b\x11\x39\x61\xb3\xdb\x4c\x53\xf5\xb2\xb1\xca\x3c\x55\x11\x83\x85\x42\xf7\xd7\x7c\xf0\x17\xfe\x3d\x44\x3f\x60\x38\x49\xb5\x4a\x85\xf6\x60\xdc\x79\x7c\xec\x3c\x49\xd7\xef\xfb\x78\xc0\x3a\xc8\xb6\x05\x9a\xc5\xcb\x2a\xc6\x78\xa5\x38\x1e\xb7\x83\x51\x3f\xdb\x15\x8e\xd6\x2e\xab\x18\xdb\xed\xb8\xc0\x32\x3a\x50\x0d\xb0\x4d\xc1\x68\xe9\xb2\x8a\x0e\xdd\x46\x1a\xdd\x40\x9c\x2e\x92\xeb\x57\x7b\xc8\x40\x71\x4a\x4d\xac\x9c\x61\x74\xe4\x7e\x72\xb9\x29\xb9\x70\xb5\xad\x73\x59\x75\x24\x1a\x90\x4a\x6c\xbb\xa2\xb0\x68\xd9\x05\xff\x31\xf6\xb2\xb1\x0a\x47\xfb\x95\x84\xf6\x00\x1d\x49\x84\x85\x83\xec\xc3\x25\xb9\xa6\x1b\x13\x4b\x64\x98\x86\x88\x88\x1a\xac\xcf\x89\xb6\x38\x11\xbe\x41\xb0\x5c\x13\xc1\x15\xb1\x72\x74\xc9\xbb\xeb\x2e\xde\x71\x9d\xe5\xf1\x53\xce\xf2\x19\xaa\xb3\x54\xe7\xa8\xea\xce\x3d\x69\x08\xb3\x43\x6c\x77\x78\x5a\xc3\xac\xa2\x63\xb8\x9d\x66\x78\x2c\x34\x6c\x79\xd7\xbc\xeb\xa9\x94\xa0\x1b\x62\x87\x80\x15\x94\xfe\x55\xd4\x52\x1a\x46\x87\xf2\x4f\x1a\xe5\xf1\x90\x72\xac\xb3\x25\xec\x0e\xb3\x53\xb0\x21\x2c\x8f\x60\x62\x2d\x0d\xa3\x61\xd9\x93\x4b\xb3\xac\x26\x5a\x86\xe3\x64\x53\x6c\x34\xcc\x4e\x83\x2f\x4c\xab\x98\x58\x53\xc3\xe8\x98\xee\x49\x33\xad\x77\x34\x0d\xc7\x3b\x6d\x61\x39\xc2\x4e\x85\x33\x6c\x27\x30\xb1\xb6\x86\xd1\xb1\xcd\xa7\xd9\x4e\xfe\x97\x6d\x38\x6e\x37\x86\x69\x99\x9d\x0e\x6f\x18\xfb\x0f\x05\xac\xb1\x61\x74\x8c\xf7\x71\xe3\x69\xb9\x70\xad\xad\xa3\xd4\xd5\x3d\x0a\x90\x2a\x6c\xbb\xb2\x60\x37\x3c\x16\xcd\x30\xb3\x22\x42\x9b\x65\x7d\x8e\xb6\xdf\x47\xdb\x1b\x10\xcd\xc8\x85\x0f\xf1\xcb\xb0\xd3\x50\x1d\x89\x06\xa4\x51\xb6\x5d\x45\x44\xef\x38\x2c\x9a\x69\xe6\x44\x84\x36\xc7\xfa\x1c\x6d\x38\xe9\x9b\x86\x57\x50\x89\x4f\x49\x6b\xd1\xb3\xb6\x4a\xec\x30\x30\x5a\xba\xac\xa2\x43\x37\x22\x5f\xf4\x25\xd2\x25\x3f\x25\xfd\xfe\xec\x5f\x00\x00\x00\xff\xff\x23\x1b\x80\xd8\x8c\x1c\x00\x00")

func resourcesGoweaveCssUnBytes() ([]byte, error) {
	return bindataRead(
		_resourcesGoweaveCssUn,
		"resources/.goweave.css.un~",
	)
}

func resourcesGoweaveCssUn() (*asset, error) {
	bytes, err := resourcesGoweaveCssUnBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/.goweave.css.un~", size: 7308, mode: os.FileMode(420), modTime: time.Unix(1460013597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesGoweaveCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6f\xab\x3a\x10\x5d\xc3\xaf\x18\xb5\x7a\xea\x87\x02\xcd\x57\xab\x2a\xd9\xbc\xa7\x6e\xde\xa2\x7d\x9b\x4a\x6f\x6f\xb0\x93\x58\x35\x1e\x64\xdc\xa4\xb9\x55\xfe\xfb\x1d\x07\x9c\x82\xa1\xed\xd5\xbd\x41\x10\x33\x1c\x8f\x67\xce\x1c\x8f\x6f\xae\x61\x8d\x3b\xc1\xb6\x02\x1e\x9e\x9f\xe1\xfa\x26\x8e\x33\xe4\x7b\x78\x8f\x81\x7e\x19\xcb\x5f\xd6\x06\x5f\x35\x5f\xc0\xf9\x6a\xec\xae\xe5\xf1\x43\xc1\xcc\x5a\xea\x05\x8c\x45\x51\x1b\x4a\xc6\xb9\xd4\xeb\x96\x65\x85\xda\x26\x2b\x56\x48\xb5\x5f\xc0\xc5\x23\xb3\x78\x31\x82\x8b\x7f\x85\xda\x0a\x2b\x73\x46\x2f\x15\xd3\x55\x52\x09\x23\x57\xcb\x38\x3a\xc2\x2b\xf9\x43\x2c\x60\xe2\x5c\x44\x4a\x6a\x91\x6c\x84\x5c\x6f\x2c\x99\xd2\x99\x33\x1e\xe2\xf8\xdc\x87\xcb\xe5\x36\xb5\x2c\x53\x82\x62\x8d\xb8\xac\x4a\xc5\x68\xa1\xa3\x85\x66\x67\x68\xb8\x30\x49\x8e\x4a\xb1\xb2\x22\xa7\x7e\x34\xe0\xc4\xf4\x3d\x24\x06\x77\x03\x48\x3e\x80\xcc\x85\x52\x5d\x68\xd9\xb0\x57\x93\x94\x58\x2c\x5b\xb4\x34\x46\x53\xe7\x15\x9a\x33\xb4\x16\x0b\xb2\xa7\xf7\xc1\x17\x25\x56\x1e\x1f\x84\xd5\xac\x76\x0a\x4b\x6a\x47\x5d\x17\x96\xbe\x88\xfd\x8e\x28\x69\xb0\x44\x06\x1a\x57\xd2\x29\x9b\xcc\xb3\x00\xaa\xa4\x15\x86\xa9\x00\x7a\x9f\x67\xe2\x6e\x1e\x40\x25\x17\xda\x76\x81\xbb\x0d\x4d\x0f\x60\x58\x92\x43\x8b\x47\x9e\xbf\x80\xe5\x58\x14\x3d\x7f\xe7\x8c\xb1\x0e\x6c\x33\x19\xc1\x66\x4a\xf7\x8c\xee\x39\xdd\xb7\xce\x6d\x57\x6d\xff\x6c\x49\x55\x0c\x1e\x65\x66\x84\x53\xdd\xb7\xea\xeb\x8a\xcd\x53\x6f\xc5\x9b\x4d\x98\x92\x6b\x52\xba\xe3\x7f\xf9\xa7\x65\x9d\xfc\x5a\x51\x53\x8d\x39\xf2\x3a\xd5\xd3\x78\xda\x1a\xcf\x5a\xe3\x79\x6b\x7c\x3b\xa0\xbc\x49\x7a\xd7\xf3\xcf\x31\x6f\x90\x44\x94\xe3\x43\xf9\x34\x69\xca\xb2\x43\xff\x7c\xec\xae\x60\x83\x8e\xc7\x7f\x35\x79\xd0\x2a\x3b\xc9\xed\x66\x01\xd3\x56\xd2\x6f\xde\x38\x3b\x1a\xa3\xfa\x8d\xbd\x5a\xec\x74\x8b\x80\x43\x6f\x35\x41\x19\xbc\xbd\x66\x6b\xea\xcd\x48\xb1\xaf\x14\xee\x92\xb7\x05\x6c\x24\x27\x29\xf6\xf4\x44\x9c\x94\xe6\xd8\x20\x82\xa2\x0d\x00\xdf\x3b\x29\xde\xbb\x0c\x3f\x8d\x3b\x88\x64\x28\xf0\x68\x40\x11\x51\x3b\xe4\x0f\xaf\x83\x35\x88\x3e\x7a\x6f\xe2\x6b\x31\x1b\xbb\xeb\xb3\x2c\x8f\x83\xa6\xac\x9d\xed\xf0\x24\xb4\xc2\x11\x3c\xa1\x66\x39\xfd\x3f\xa0\xae\x50\xb1\x6a\x04\x67\x8f\xaf\xb9\xe4\xac\xb1\x88\xb3\x11\x14\xa8\xb1\x2a\x59\x2e\x3a\x22\x30\xeb\xec\x72\x32\x1d\x8f\xc0\x3f\xae\x86\xba\x68\x5a\x89\xdc\x4a\xd4\x5e\x8d\xed\x56\x99\x29\xcc\x5f\x86\x1a\xaa\x93\xe2\x17\x13\x02\x16\x6b\xce\xa2\xce\xee\xa9\x6d\x87\x9e\x63\xe7\x32\x15\x45\x69\xe9\x30\x83\x96\x67\x8d\x4d\x73\xa4\xa3\xef\x3f\x66\xa8\xd1\xc3\x56\x8a\x5d\x89\xc6\x56\xee\xfc\xfb\xbb\x10\x9c\x7a\x47\x8c\x5a\xed\xa1\xca\x8d\x10\x1a\x98\xe6\x70\xd9\x92\xf5\x1d\x95\xf3\x8a\xe2\x8d\xa3\xa1\xe3\x88\x56\xeb\x27\x02\xd0\xa8\xa9\xde\x3d\x0e\x73\x3a\x44\xe9\x73\x73\x60\xf9\xf0\xa2\x43\xcf\xb7\x19\x41\xef\x30\x1a\x58\x09\x82\xb9\xcd\x5e\xa7\xd5\x3e\xb6\x6a\x2d\xc6\xa8\xb3\x0b\x49\xb4\xe1\x4c\x5f\x94\xef\x80\xc3\x84\x87\x8c\xd3\x9c\x9a\xf4\xff\x85\xd9\x83\xfe\x4d\xe6\xe7\xb7\xc3\xcc\x9b\x76\xa0\x3e\xc3\x43\x0c\xbd\x30\x03\x5c\x4a\xfe\xe0\xf4\xf0\x51\xfe\x0c\x00\x00\xff\xff\x02\xd1\x68\x39\x16\x09\x00\x00")

func resourcesGoweaveCssBytes() ([]byte, error) {
	return bindataRead(
		_resourcesGoweaveCss,
		"resources/goweave.css",
	)
}

func resourcesGoweaveCss() (*asset, error) {
	bytes, err := resourcesGoweaveCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/goweave.css", size: 2326, mode: os.FileMode(420), modTime: time.Unix(1460013597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesGoweaveCssBak = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6f\xab\x3a\x10\x5d\xc3\xaf\x18\xb5\x7a\xea\x87\x02\xcd\x57\xab\x2a\xd9\xbc\xa7\x6e\xde\xa2\x7d\x9b\x4a\x6f\x6f\xb0\x93\x58\x35\x1e\x64\xdc\xa4\xb9\x55\xfe\xfb\x1d\x07\x9c\x82\xa1\xed\xd5\xbd\x41\x10\x33\x1c\x8f\x67\xce\x1c\x8f\x6f\xae\x61\x8d\x3b\xc1\xb6\x02\x1e\x9e\x9f\xe1\xfa\x26\x8e\x33\xe4\x7b\x78\x8f\x81\x7e\x19\xcb\x5f\xd6\x06\x5f\x35\x5f\xc0\xf9\x6a\xec\xae\xe5\xf1\x43\xc1\xcc\x5a\xea\x05\x8c\x45\x51\x1b\x4a\xc6\xb9\xd4\xeb\x96\x65\x85\xda\x26\x2b\x56\x48\xb5\x5f\xc0\xc5\x23\xb3\x78\x31\x82\x8b\x7f\x85\xda\x0a\x2b\x73\x46\x2f\x15\xd3\x55\x52\x09\x23\x57\xcb\x38\x3a\xc2\x2b\xf9\x43\x2c\x60\xe2\x5c\x44\x4a\x6a\x91\x6c\x84\x5c\x6f\x2c\x99\xd2\x99\x33\x1e\xe2\xf8\xdc\x87\xcb\xe5\x36\xb5\x2c\x53\x82\x62\x8d\xb8\xac\x4a\xc5\x68\xa1\xa3\x85\x66\x67\x68\xb8\x30\x49\x8e\x4a\xb1\xb2\x22\xa7\x7e\x34\xe0\xc4\xf4\x3d\x24\x06\x77\x03\x48\x3e\x80\xcc\x85\x52\x5d\x68\xd9\xb0\x57\x93\x94\x58\x2c\x5b\xb4\x34\x46\x53\xe7\x15\x9a\x33\xb4\x16\x0b\xb2\xa7\xf7\xc1\x17\x25\x56\x1e\x1f\x84\xd5\xac\x76\x0a\x4b\x6a\x47\x5d\x17\x96\xbe\x88\xfd\x8e\x28\x69\xb0\x44\x06\x1a\x57\xd2\x29\x9b\xcc\xb3\x00\xaa\xa4\x15\x86\xa9\x00\x7a\x9f\x67\xe2\x6e\x1e\x40\x25\x17\xda\x76\x81\xbb\x0d\x4d\x0f\x60\x58\x92\x43\x8b\x47\x9e\xbf\x80\xe5\x58\x14\x3d\x7f\xe7\x8c\xb1\x0e\x6c\x33\x19\xc1\x66\x4a\xf7\x8c\xee\x39\xdd\xb7\xce\x6d\x57\x6d\xff\x6c\x49\x55\x0c\x1e\x65\x66\x84\x53\xdd\xb7\xea\xeb\x8a\xcd\x53\x6f\xc5\x9b\x4d\x98\x92\x6b\x52\xba\xe3\x7f\xf9\xa7\x65\x9d\xfc\x5a\x51\x53\x8d\x39\xf2\x3a\xd5\xd3\x78\xda\x1a\xcf\x5a\xe3\x79\x6b\x7c\xfb\x99\xf2\x3a\xde\x39\xe6\x0d\x8e\x68\x72\x6c\x28\x9f\x24\x4d\x58\x76\xc8\x9f\x8f\xdd\x15\x6c\xcf\xf1\xf8\xaf\x26\x0b\x5a\x63\x27\xb9\xdd\x2c\x60\xda\x4a\xf9\xcd\x1b\x67\x47\x63\x54\xbf\xb1\x57\x8b\x9d\x5e\x11\x30\xe8\xad\x26\x28\x82\xb7\xd7\x5c\x4d\xbd\x19\x29\xf6\x95\xc2\x5d\xf2\xb6\x80\x8d\xe4\x24\xc4\x9e\x9a\x88\x91\xd2\x1c\xdb\x43\xc0\xc7\x00\xf0\xbd\x93\xe2\xbd\xcb\xf0\xd3\xb8\x83\x48\x86\x02\x8f\x06\xf4\x10\xb5\x43\xfe\xf0\x3a\x58\x83\xe8\xa3\xf3\x26\xbe\x16\xb3\xb1\xbb\x3e\xcb\xf2\x38\x68\xca\xda\xd9\x0c\x4f\x42\x2b\x1c\xc1\x13\x6a\x96\xd3\xff\x03\xea\x0a\x15\xab\x46\x70\xf6\xf8\x9a\x4b\xce\x1a\x8b\x38\x1b\x41\x81\x1a\xab\x92\xe5\xa2\x23\x02\xb3\xce\x2e\x27\xd3\xf1\x08\xfc\xe3\x6a\xa8\x87\xa6\x95\xc8\xad\x44\xed\xb5\xd8\x6e\x94\x99\xc2\xfc\x65\xa8\x9d\x3a\x29\x7e\x31\x21\x60\xb1\xe6\x2c\xea\xec\x9d\xda\x76\xe8\x39\x76\x2e\x53\x51\x94\x96\x8e\x32\x68\x79\xd6\xd8\xb4\x46\x3a\xf8\xfe\x63\x86\xda\x3c\x6c\xa5\xd8\x95\x68\x6c\xe5\x4e\xbf\xbf\x0b\xc1\xa9\x73\xc4\xa8\xd5\x1e\xaa\xdc\x08\xa1\x81\x69\x0e\x97\x2d\x59\xdf\x51\x39\xaf\x28\xde\x38\x1a\x3a\x8c\x68\xb5\x7e\x22\x00\x8d\x9a\xea\xdd\xe3\x30\xa7\x23\x94\x3e\x37\xc7\x95\x0f\x2f\x3a\xf4\x7c\x9b\x11\xf4\x8e\xa2\x81\x95\x20\x98\xdb\xec\x75\x5a\xed\x63\xab\xd6\x62\x8c\x3a\xbb\x90\x44\x1b\xce\xf4\x45\xf9\x0e\x38\x4c\x78\xc8\x38\xcd\xa9\x49\xff\x5f\x98\x3d\xe8\xdf\x64\x7e\x7e\x3b\xcc\xbc\x69\x07\xea\x33\x3c\xc4\xd0\x0b\x33\xc0\xa5\xe4\x0f\x4e\x0f\x1f\xe5\xcf\x00\x00\x00\xff\xff\xbd\xb9\x32\x20\x14\x09\x00\x00")

func resourcesGoweaveCssBakBytes() ([]byte, error) {
	return bindataRead(
		_resourcesGoweaveCssBak,
		"resources/goweave.css.bak",
	)
}

func resourcesGoweaveCssBak() (*asset, error) {
	bytes, err := resourcesGoweaveCssBakBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/goweave.css.bak", size: 2324, mode: os.FileMode(420), modTime: time.Unix(1460013582, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesGoweaveTempl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x8f\x9b\x30\x10\x85\xcf\xe1\x57\xb8\x3e\x37\xd0\xde\x7a\x00\x2e\x6c\x57\xea\xa9\x2b\xd1\x4b\x8f\x8e\x3d\x09\xd6\x1a\x1b\xd9\x13\x52\x84\xf8\xef\x1d\x9b\x80\x9a\xaa\x91\x7a\x32\xbc\x99\xf7\xfc\xd9\xe3\x79\xd6\x67\x96\xbf\x5e\x8d\x59\x96\xf2\xc3\xcb\xf7\xe6\xc7\xcf\xb7\xaf\xac\xc3\xde\xd4\x59\xb9\x2d\x20\x14\x2d\xa8\xd1\x40\x3d\xcf\xf9\xab\x36\x60\x45\x0f\xe4\x28\x56\x31\x2b\x7b\x40\xc1\x64\x27\x7c\x00\xac\xf8\x15\xcf\xc7\x2f\xbc\xd8\xf4\xd8\x5c\xf1\x51\xc3\x6d\x70\x1e\x39\x93\xce\x22\x58\xea\xbb\x69\x85\x5d\xa5\x60\xd4\x12\x8e\xe9\xe7\x23\xd3\x56\xa3\x16\xe6\x18\xa4\x30\x50\x7d\xce\x3f\xf1\x3a\x5b\x29\xbf\x59\xa3\x2d\x34\x6d\xbb\x2c\x59\x19\x70\x32\xc0\x70\x1a\x28\x19\xe1\x17\x16\x32\x04\x1e\xe9\xda\x58\x88\x68\xa9\x23\x7a\xc1\x04\x88\x16\x72\xbf\x33\x0f\xa6\xe2\xa9\x14\x3a\x00\x82\xe9\x3c\x9c\x2b\xf2\x35\x21\xbc\x09\xec\x96\x25\x59\xac\x8a\x8e\xe2\x7e\xf4\x93\x53\xd3\x1f\xb2\xd2\x23\xd3\xaa\xe2\x17\x77\x03\x31\x02\x01\x1e\x76\xed\x24\xe4\xfb\xc5\xbb\xab\x55\xbc\x2e\x0b\x52\xb7\xa2\x34\x22\x04\x62\x15\x27\x93\x1c\x87\x79\xf6\xc2\x5e\x80\xe5\x2d\x48\xd4\xce\x06\x8a\x3e\x44\x99\xce\x6a\x49\x6e\x9c\x02\xc6\xf9\xaa\x3e\x66\x78\x16\x56\x4f\x0a\xfa\xbb\xaa\x98\x72\x32\xdd\xc5\x8b\x93\xf1\x26\x56\x8a\x7f\xf4\x49\xda\x82\x30\x07\x0f\x75\x19\xbf\xa3\x27\x6e\x1b\x4d\xe9\xbf\x2c\x52\x6d\x4f\xd8\x2f\xf3\x39\x12\xb3\x6e\x8d\x7d\x46\xb6\x37\xfc\x27\x20\x83\x7e\xc0\x89\x3f\x52\xa4\x41\x50\xfb\xa6\xed\xd2\x5d\xb9\x2f\x0f\xcf\xbb\x58\xc7\x48\x53\x8d\xef\x7a\x73\xfc\x0e\x00\x00\xff\xff\x88\x15\xc2\xf1\x02\x03\x00\x00")

func resourcesGoweaveTemplBytes() ([]byte, error) {
	return bindataRead(
		_resourcesGoweaveTempl,
		"resources/goweave.templ",
	)
}

func resourcesGoweaveTempl() (*asset, error) {
	bytes, err := resourcesGoweaveTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/goweave.templ", size: 770, mode: os.FileMode(420), modTime: time.Unix(1458206570, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/.goweave.css.swp": resourcesGoweaveCssSwp,
	"resources/.goweave.css.un~": resourcesGoweaveCssUn,
	"resources/goweave.css": resourcesGoweaveCss,
	"resources/goweave.css.bak": resourcesGoweaveCssBak,
	"resources/goweave.templ": resourcesGoweaveTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		".goweave.css.swp": &bintree{resourcesGoweaveCssSwp, map[string]*bintree{}},
		".goweave.css.un~": &bintree{resourcesGoweaveCssUn, map[string]*bintree{}},
		"goweave.css": &bintree{resourcesGoweaveCss, map[string]*bintree{}},
		"goweave.css.bak": &bintree{resourcesGoweaveCssBak, map[string]*bintree{}},
		"goweave.templ": &bintree{resourcesGoweaveTempl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

